[
{
  "name":"ch.qos.logback.classic.Logger",
  "methods":[{"name":"log","parameterTypes":["org.slf4j.Marker","java.lang.String","int","java.lang.String","java.lang.Object[]","java.lang.Throwable"] }]
},
{
  "name":"ch.qos.logback.classic.encoder.PatternLayoutEncoder",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.DateConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.LevelConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.LineSeparatorConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.LoggerConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.MessageConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.ThreadConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.color.HighlightingCompositeConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.core.ConsoleAppender",
  "allPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.core.pattern.color.CyanCompositeConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.core.pattern.color.GrayCompositeConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.core.pattern.color.MagentaCompositeConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.example.$CamundaComponentDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.example.$MyProcessEngineConfigurationCustomizerDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.example.$StartProcessControllerDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.example.ExitPrinter",
  "methods":[
    {"name":"<init>","parameterTypes":[] }
  ]
},
{
  "name":"com.example.GermanPrinter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.oracle.truffle.api.LanguageAccessor$LanguageImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.oracle.truffle.api.TruffleLanguage"
},
{
  "name":"com.oracle.truffle.api.debug.impl.DebuggerInstrumentProvider",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.oracle.truffle.api.frame.FrameAccessor$FramesImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.oracle.truffle.api.instrumentation.InstrumentAccessor$InstrumentImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.oracle.truffle.api.instrumentation.InstrumentationHandler"
},
{
  "name":"com.oracle.truffle.api.instrumentation.TruffleInstrument"
},
{
  "name":"com.oracle.truffle.api.interop.DefaultBooleanExportsGen"
},
{
  "name":"com.oracle.truffle.api.interop.DefaultByteExportsGen"
},
{
  "name":"com.oracle.truffle.api.interop.DefaultCharacterExportsGen"
},
{
  "name":"com.oracle.truffle.api.interop.DefaultDoubleExportsGen"
},
{
  "name":"com.oracle.truffle.api.interop.DefaultFloatExportsGen"
},
{
  "name":"com.oracle.truffle.api.interop.DefaultIntegerExportsGen"
},
{
  "name":"com.oracle.truffle.api.interop.DefaultLongExportsGen"
},
{
  "name":"com.oracle.truffle.api.interop.DefaultShortExportsGen"
},
{
  "name":"com.oracle.truffle.api.interop.DefaultStringExportsGen"
},
{
  "name":"com.oracle.truffle.api.interop.InteropAccessor$InteropImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.oracle.truffle.api.interop.InteropLibrary"
},
{
  "name":"com.oracle.truffle.api.interop.InteropLibraryGen"
},
{
  "name":"com.oracle.truffle.api.io.IOAccessor$IOSupportImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.oracle.truffle.api.library.DefaultExportProvider"
},
{
  "name":"com.oracle.truffle.api.library.DynamicDispatchLibrary"
},
{
  "name":"com.oracle.truffle.api.library.DynamicDispatchLibraryGen"
},
{
  "name":"com.oracle.truffle.api.nodes.NodeAccessor$AccessNodes",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.oracle.truffle.api.source.SourceAccessor$SourceSupportImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.oracle.truffle.polyglot.EngineAccessor$EngineImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"info.novatec.micronaut.camunda.bpm.feature.$Configuration$Database$InterceptedDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"info.novatec.micronaut.camunda.bpm.feature.$Configuration$Database$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"info.novatec.micronaut.camunda.bpm.feature.$Configuration$InterceptedDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"info.novatec.micronaut.camunda.bpm.feature.$Configuration$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"info.novatec.micronaut.camunda.bpm.feature.$DatasourceConfiguration$InterceptedDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"info.novatec.micronaut.camunda.bpm.feature.$DatasourceConfiguration$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"info.novatec.micronaut.camunda.bpm.feature.$DefaultProcessEngineConfigurationCustomizerDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"info.novatec.micronaut.camunda.bpm.feature.$MicronautProcessEngineConfiguration$AuthorizationService4DefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"info.novatec.micronaut.camunda.bpm.feature.$MicronautProcessEngineConfiguration$CaseService5DefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"info.novatec.micronaut.camunda.bpm.feature.$MicronautProcessEngineConfiguration$DecisionService6DefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"info.novatec.micronaut.camunda.bpm.feature.$MicronautProcessEngineConfiguration$ExternalTaskService7DefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"info.novatec.micronaut.camunda.bpm.feature.$MicronautProcessEngineConfiguration$FilterService8DefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"info.novatec.micronaut.camunda.bpm.feature.$MicronautProcessEngineConfiguration$FormService9DefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"info.novatec.micronaut.camunda.bpm.feature.$MicronautProcessEngineConfiguration$HistoryService11DefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"info.novatec.micronaut.camunda.bpm.feature.$MicronautProcessEngineConfiguration$IdentityService12DefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"info.novatec.micronaut.camunda.bpm.feature.$MicronautProcessEngineConfiguration$ManagementService3DefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"info.novatec.micronaut.camunda.bpm.feature.$MicronautProcessEngineConfiguration$ProcessEngine0DefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"info.novatec.micronaut.camunda.bpm.feature.$MicronautProcessEngineConfiguration$RepositoryService2DefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"info.novatec.micronaut.camunda.bpm.feature.$MicronautProcessEngineConfiguration$RuntimeService1DefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"info.novatec.micronaut.camunda.bpm.feature.$MicronautProcessEngineConfiguration$TaskService10DefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"info.novatec.micronaut.camunda.bpm.feature.$MicronautProcessEngineConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.aop.Interceptor[]"
},
{
  "name":"io.micronaut.buffer.netty.$NettyByteBufferFactoryDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.context.env.PropertiesPropertySourceLoader",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.context.env.yaml.YamlPropertySourceLoader",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.discovery.$DefaultCompositeDiscoveryClientDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.discovery.$DefaultServiceInstanceIdGeneratorDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.discovery.cloud.digitalocean.$DigitalOceanInstanceMetadata$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.discovery.cloud.digitalocean.$DigitalOceanMetadataConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.discovery.cloud.digitalocean.$DigitalOceanMetadataResolverDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.discovery.config.$DefaultCompositeConfigurationClientDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.health.$DefaultCurrentHealthStatusDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.health.$HealthStatus$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.health.$HeartbeatConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.health.$HeartbeatDiscoveryClientCondition$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.health.$HeartbeatTaskDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.HttpMethod[]"
},
{
  "name":"io.micronaut.http.bind.$DefaultRequestBinderRegistryDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.client.$DefaultHttpClientConfiguration$DefaultConnectionPoolConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.client.$DefaultHttpClientConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.client.$DefaultLoadBalancerResolverDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.client.$ServiceHttpClientCondition$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.client.$ServiceHttpClientConfiguration$ServiceConnectionPoolConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.client.$ServiceHttpClientConfiguration$ServiceSslClientConfiguration$DefaultKeyConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.client.$ServiceHttpClientConfiguration$ServiceSslClientConfiguration$DefaultKeyStoreConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.client.$ServiceHttpClientConfiguration$ServiceSslClientConfiguration$DefaultTrustStoreConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.client.$ServiceHttpClientConfiguration$ServiceSslClientConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.client.$ServiceHttpClientConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.client.$ServiceHttpClientFactory$HealthCheckStarter1DefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.client.$ServiceHttpClientFactory$ServiceInstanceList0DefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.client.$ServiceHttpClientFactoryDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.client.bind.$DefaultHttpClientBinderRegistryDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.client.filter.$DefaultHttpClientFilterResolverDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.client.interceptor.$HttpClientIntroductionAdviceDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.client.interceptor.configuration.$DefaultClientVersioningConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.client.interceptor.configuration.$NamedClientVersioningConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.client.loadbalance.$DiscoveryClientLoadBalancerFactoryDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.client.loadbalance.$LoadBalancerConvertersDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.client.loadbalance.$ServiceInstanceListLoadBalancerFactoryDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.client.netty.$RxNettyHttpClientRegistry$HttpClient0DefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.client.netty.$RxNettyHttpClientRegistryDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.client.netty.ssl.$NettyClientSslBuilderDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.client.rxjava2.$RxReactiveClientResultTransformerDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.codec.$CodecConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.converters.$HttpConverterRegistrarDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.hateoas.$AbstractResource$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.hateoas.$DefaultLink$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.hateoas.$JsonError$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.hateoas.$VndError$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.netty.channel.$DefaultEventLoopGroupConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.netty.channel.$DefaultEventLoopGroupFactoryDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.netty.channel.$DefaultEventLoopGroupRegistry$DefaultEventLoopGroup2DefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.netty.channel.$DefaultEventLoopGroupRegistry$EventLoopGroup1DefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.netty.channel.$DefaultEventLoopGroupRegistry$EventLoopGroupThreadFactory0DefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.netty.channel.$DefaultEventLoopGroupRegistryDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.netty.channel.$EpollAvailabilityCondition$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.netty.channel.$EpollEventLoopGroupFactoryDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.netty.channel.$KQueueAvailabilityCondition$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.netty.channel.$KQueueEventLoopGroupFactoryDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.netty.channel.$NettyThreadFactory$NettyThreadFactory0DefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.netty.channel.$NettyThreadFactoryDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.netty.channel.$NioEventLoopGroupFactoryDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.netty.channel.converters.$DefaultChannelOptionFactoryDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.netty.channel.converters.$EpollChannelOptionFactoryDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.netty.channel.converters.$KQueueChannelOptionFactoryDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.netty.stream.HttpStreamsServerHandler",
  "methods":[
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }
  ]
},
{
  "name":"io.micronaut.http.netty.websocket.$NettyServerWebSocketBroadcasterDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.netty.websocket.$WebSocketMessageEncoderDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.resource.$ResourceLoaderFactory$FileSystemResourceLoader1DefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.resource.$ResourceLoaderFactory$GetClassPathResourceLoader0DefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.resource.$ResourceLoaderFactory$ResourceResolver2DefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.resource.$ResourceLoaderFactoryDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.$HttpServerConfiguration$CorsConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.$HttpServerConfiguration$HostResolutionConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.$HttpServerConfiguration$MultipartConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.$HttpServerConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.binding.$RequestArgumentSatisfierDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.codec.$TextStreamCodecDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.context.$ServerRequestContextFilterDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.context.$ServerRequestContextInstrumentationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.cors.$BeanConfiguration",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.cors.$CorsFilterDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.cors.$CorsOriginConverterDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.exceptions.$ContentLengthExceededHandlerDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.exceptions.$ConversionErrorHandlerDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.exceptions.$HttpStatusHandlerDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.exceptions.$JsonExceptionHandlerDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.exceptions.$URISyntaxHandlerDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.exceptions.$UnsatisfiedArgumentHandlerDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.netty.$DefaultHttpCompressionStrategyDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.netty.$DefaultHttpContentProcessorResolverDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.netty.$FormDataHttpContentSubscriberFactoryDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.netty.$NettyEmbeddedServerInstanceDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.netty.$NettyHttpServerDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.netty.$NettyRequestArgumentSatisfierDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.netty.NettyHttpResponseFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.netty.RoutingInBoundHandler",
  "methods":[
    {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }, 
    {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }
  ]
},
{
  "name":"io.micronaut.http.server.netty.binders.$NettyBinderRegistrarDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.netty.configuration.$NettyHttpServerConfiguration$AccessLoggerDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.netty.configuration.$NettyHttpServerConfiguration$Http2SettingsDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.netty.configuration.$NettyHttpServerConfiguration$ParentDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.netty.configuration.$NettyHttpServerConfiguration$WorkerDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.netty.configuration.$NettyHttpServerConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.netty.converters.$DuplicateRouteHandlerDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.netty.converters.$NettyConvertersDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.netty.converters.$UnsatisfiedRouteHandlerDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.netty.jackson.$JsonHttpContentSubscriberFactoryDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.netty.jackson.$JsonViewMediaTypeCodecFactoryDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.netty.jackson.$JsonViewServerFilterDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.netty.ssl.$CertificateProvidedSslBuilderDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.netty.ssl.$SelfSignedSslBuilderDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.netty.types.$DefaultCustomizableResponseTypeHandlerRegistryDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.netty.types.files.$FileTypeHandlerConfiguration$CacheControlConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.netty.types.files.$FileTypeHandlerConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.netty.types.files.$FileTypeHandlerDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.util.$DefaultHttpClientAddressResolverDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.util.$DefaultHttpHostResolverDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.server.websocket.$ServerWebSocketProcessorDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.ssl.$ClientSslConfiguration$DefaultKeyConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.ssl.$ClientSslConfiguration$DefaultKeyStoreConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.ssl.$ClientSslConfiguration$DefaultTrustStoreConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.ssl.$ClientSslConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.ssl.$DefaultSslConfiguration$DefaultKeyConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.ssl.$DefaultSslConfiguration$DefaultKeyStoreConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.ssl.$DefaultSslConfiguration$DefaultTrustStoreConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.ssl.$DefaultSslConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.ssl.$ServerSslConfiguration$DefaultKeyConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.ssl.$ServerSslConfiguration$DefaultKeyStoreConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.ssl.$ServerSslConfiguration$DefaultTrustStoreConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.ssl.$ServerSslConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.http.util.$OutgoingHttpRequestProcessorImplDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.jackson.$BeanConfiguration",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.jackson.$JacksonConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.jackson.$ObjectMapperFactory$ObjectMapper0DefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.jackson.$ObjectMapperFactoryDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.jackson.bind.$JacksonBeanPropertyBinderDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.jackson.codec.$JsonMediaTypeCodecDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.jackson.codec.$JsonStreamMediaTypeCodecDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.jackson.convert.$JacksonConverterRegistrarDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.jackson.env.CloudFoundryVcapApplicationPropertySourceLoader",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.jackson.env.CloudFoundryVcapServicesPropertySourceLoader",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.jackson.env.EnvJsonPropertySourceLoader",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.jackson.env.JsonPropertySourceLoader",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.jackson.modules.$BeanIntrospectionModuleDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.jackson.serialize.$ConvertibleMultiValuesSerializerDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.jackson.serialize.$ConvertibleValuesSerializerDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.jackson.serialize.$JacksonObjectSerializerDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.jackson.serialize.$OptionalValuesSerializerDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.jackson.serialize.$ResourceModuleDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.jackson.serialize.$ResourceSerializerModifierDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.logging.$PropertiesLoggingLevelsConfigurerDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.logging.impl.$LogbackLoggingSystemDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.reactive.flow.converters.$FlowConverterRegistrarDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.reactive.rxjava2.$RxInstrumenterFactoryDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.reactive.rxjava2.$RxJava2InstrumentationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.reactive.rxjava2.converters.$RxJavaConverterRegistrarDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.retry.annotation.$DefaultRetryPredicate$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.retry.intercept.$DefaultRetryInterceptorDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.retry.intercept.$RecoveryInterceptorDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.runtime.$ApplicationConfiguration$InstanceConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.runtime.$ApplicationConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.runtime.context.$CompositeMessageSourceDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.runtime.context.env.$ConfigurationIntroductionAdviceDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.runtime.context.scope.$ThreadLocalCustomScopeDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.runtime.context.scope.refresh.$RefreshInterceptorDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.runtime.context.scope.refresh.$RefreshScopeDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.runtime.converters.time.$TimeConverterRegistrarDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.runtime.http.codec.$MediaTypeCodecRegistryFactory$MediaTypeCodecRegistry0DefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.runtime.http.codec.$MediaTypeCodecRegistryFactoryDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.runtime.http.codec.$TextPlainCodecDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.runtime.http.scope.$RequestCustomScopeDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.runtime.server.watch.event.$FileWatchRestartListenerDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.scheduling.$DefaultTaskExceptionHandlerDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.scheduling.$ScheduledExecutorTaskSchedulerDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.scheduling.async.$AsyncInterceptorDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.scheduling.executor.$DefaultExecutorSelectorDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.scheduling.executor.$DefaultThreadFactory$ThreadFactory0DefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.scheduling.executor.$DefaultThreadFactoryDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.scheduling.executor.$ExecutorFactory$EventLoopGroupThreadFactory0DefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.scheduling.executor.$ExecutorFactory$ExecutorService1DefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.scheduling.executor.$ExecutorFactoryDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.scheduling.executor.$IOExecutorServiceConfig$Configuration0DefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.scheduling.executor.$IOExecutorServiceConfigDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.scheduling.executor.$ScheduledExecutorServiceConfig$Configuration0DefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.scheduling.executor.$ScheduledExecutorServiceConfigDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.scheduling.executor.$UserExecutorConfiguration$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.scheduling.executor.$UserExecutorConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.scheduling.instrument.$ExecutorServiceInstrumenterDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.scheduling.io.watch.$DefaultWatchThreadDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.scheduling.io.watch.$FileWatchCondition$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.scheduling.io.watch.$FileWatchConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.scheduling.io.watch.$WatchServiceFactory$WatchService0DefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.scheduling.io.watch.$WatchServiceFactoryDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.scheduling.processor.$ScheduledMethodProcessorDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.validation.$ValidatingInterceptorDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.validation.exceptions.$ConstraintExceptionHandlerDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.validation.exceptions.$ValidationExceptionHandlerDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.validation.validator.$DefaultClockProviderDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.validation.validator.$DefaultValidatorConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.validation.validator.$DefaultValidatorDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.validation.validator.$DefaultValidatorFactoryDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.validation.validator.constraints.$DefaultConstraintValidators$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.validation.validator.constraints.$DefaultConstraintValidatorsDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.validation.validator.constraints.$EmailValidatorDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.validation.validator.constraints.$PatternValidatorDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.validation.validator.extractors.$DefaultValueExtractors$IntrospectionRef",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.validation.validator.extractors.$DefaultValueExtractorsDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.validation.validator.messages.$DefaultValidationMessagesDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.validation.validator.resolver.$CompositeTraversableResolverDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.web.router.$AnnotatedFilterRouteBuilderDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.web.router.$AnnotatedMethodRouteBuilderDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.web.router.$DefaultRouterDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.web.router.naming.$ConfigurableUriNamingStrategyDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.web.router.naming.$HyphenatedUriNamingStrategyDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.web.router.resource.$StaticResourceConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.web.router.resource.$StaticResourceResolverDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.web.router.version.$ConfigurationDefaultVersionProviderDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.web.router.version.$RouteVersionFilterDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.web.router.version.$RoutesVersioningConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.web.router.version.$VersionAwareRouterListenerDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.web.router.version.resolution.$HeaderVersionResolverConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.web.router.version.resolution.$HeaderVersionResolverDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.web.router.version.resolution.$ParameterVersionResolverConfigurationDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.web.router.version.resolution.$ParameterVersionResolverDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.micronaut.websocket.interceptor.$ClientWebSocketInterceptorDefinitionClass",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.netty.bootstrap.ServerBootstrap$ServerBootstrapAcceptor",
  "methods":[
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }
  ]
},
{
  "name":"io.netty.buffer.AbstractByteBufAllocator",
  "allDeclaredMethods":true
},
{
  "name":"io.netty.buffer.AbstractReferenceCountedByteBuf",
  "fields":[{"name":"refCnt", "allowUnsafeAccess":true}]
},
{
  "name":"io.netty.channel.ChannelDuplexHandler",
  "methods":[
    {"name":"bind","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, 
    {"name":"close","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"connect","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, 
    {"name":"deregister","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"disconnect","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"flush","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"read","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }
  ]
},
{
  "name":"io.netty.channel.ChannelHandlerAdapter",
  "methods":[{"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }]
},
{
  "name":"io.netty.channel.ChannelInboundHandlerAdapter",
  "methods":[
    {"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelUnregistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelWritabilityChanged","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }, 
    {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }
  ]
},
{
  "name":"io.netty.channel.ChannelInitializer",
  "methods":[
    {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }
  ]
},
{
  "name":"io.netty.channel.ChannelOutboundHandlerAdapter",
  "methods":[
    {"name":"bind","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, 
    {"name":"close","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"connect","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, 
    {"name":"deregister","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"disconnect","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"flush","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"read","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }
  ]
},
{
  "name":"io.netty.channel.CombinedChannelDuplexHandler",
  "methods":[
    {"name":"bind","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, 
    {"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelUnregistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelWritabilityChanged","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"close","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"connect","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, 
    {"name":"deregister","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"disconnect","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }, 
    {"name":"flush","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"read","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }
  ]
},
{
  "name":"io.netty.channel.DefaultChannelPipeline$HeadContext",
  "methods":[
    {"name":"bind","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, 
    {"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelUnregistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelWritabilityChanged","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"close","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"connect","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.net.SocketAddress","java.net.SocketAddress","io.netty.channel.ChannelPromise"] }, 
    {"name":"deregister","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"disconnect","parameterTypes":["io.netty.channel.ChannelHandlerContext","io.netty.channel.ChannelPromise"] }, 
    {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }, 
    {"name":"flush","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"read","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }
  ]
},
{
  "name":"io.netty.channel.DefaultChannelPipeline$TailContext",
  "methods":[
    {"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelUnregistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelWritabilityChanged","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"exceptionCaught","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Throwable"] }, 
    {"name":"userEventTriggered","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }
  ]
},
{
  "name":"io.netty.channel.SimpleChannelInboundHandler",
  "methods":[{"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }]
},
{
  "name":"io.netty.channel.socket.nio.NioServerSocketChannel",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.netty.handler.codec.MessageToMessageCodec",
  "methods":[
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }
  ]
},
{
  "name":"io.netty.handler.codec.MessageToMessageDecoder",
  "methods":[{"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }]
},
{
  "name":"io.netty.handler.codec.MessageToMessageEncoder",
  "methods":[{"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }]
},
{
  "name":"io.netty.handler.codec.http.HttpContentDecoder",
  "methods":[
    {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }
  ]
},
{
  "name":"io.netty.handler.codec.http.HttpContentEncoder",
  "methods":[{"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }]
},
{
  "name":"io.netty.handler.codec.http.HttpServerKeepAliveHandler",
  "methods":[
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }
  ]
},
{
  "name":"io.netty.handler.flow.FlowControlHandler",
  "methods":[
    {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"read","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }
  ]
},
{
  "name":"io.netty.handler.stream.ChunkedWriteHandler",
  "methods":[
    {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelWritabilityChanged","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"flush","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }
  ]
},
{
  "name":"io.netty.handler.timeout.IdleStateHandler",
  "methods":[
    {"name":"channelActive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelInactive","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRead","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object"] }, 
    {"name":"channelReadComplete","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"channelRegistered","parameterTypes":["io.netty.channel.ChannelHandlerContext"] }, 
    {"name":"write","parameterTypes":["io.netty.channel.ChannelHandlerContext","java.lang.Object","io.netty.channel.ChannelPromise"] }
  ]
},
{
  "name":"io.netty.util.ReferenceCountUtil",
  "allDeclaredMethods":true
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueColdProducerFields",
  "fields":[{"name":"producerLimit", "allowUnsafeAccess":true}]
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueConsumerFields",
  "fields":[{"name":"consumerIndex", "allowUnsafeAccess":true}]
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueProducerFields",
  "fields":[{"name":"producerIndex", "allowUnsafeAccess":true}]
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueConsumerIndexField",
  "fields":[{"name":"consumerIndex", "allowUnsafeAccess":true}]
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerIndexField",
  "fields":[{"name":"producerIndex", "allowUnsafeAccess":true}]
},
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.MpscArrayQueueProducerLimitField",
  "fields":[{"name":"producerLimit", "allowUnsafeAccess":true}]
},
{
  "name":"io.reactivex.Completable"
},
{
  "name":"io.reactivex.Maybe"
},
{
  "name":"io.reactivex.Observable"
},
{
  "name":"io.reactivex.Single"
},
{
  "name":"java.io.Serializable",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"java.lang.Boolean"
},
{
  "name":"java.lang.CharSequence",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"java.lang.Class",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"java.lang.Class[]"
},
{
  "name":"java.lang.Comparable",
  "allDeclaredMethods":true,
  "allPublicMethods":true
},
{
  "name":"java.lang.Long"
},
{
  "name":"java.lang.Object",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"java.lang.Object[]"
},
{
  "name":"java.lang.String",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"java.lang.annotation.Annotation"
},
{
  "name":"java.lang.invoke.VarHandle"
},
{
  "name":"java.lang.management.ManagementFactory",
  "methods":[{"name":"getRuntimeMXBean","parameterTypes":[] }]
},
{
  "name":"java.lang.management.RuntimeMXBean",
  "methods":[
    {"name":"getInputArguments","parameterTypes":[] }, 
    {"name":"getName","parameterTypes":[] }
  ]
},
{
  "name":"java.lang.reflect.AnnotatedElement",
  "allPublicMethods":true
},
{
  "name":"java.lang.reflect.Constructor[]"
},
{
  "name":"java.lang.reflect.GenericDeclaration",
  "allPublicMethods":true
},
{
  "name":"java.lang.reflect.Type",
  "allPublicMethods":true
},
{
  "name":"java.lang.reflect.TypeVariable[]"
},
{
  "name":"java.nio.Bits",
  "fields":[{"name":"UNALIGNED"}]
},
{
  "name":"java.nio.Buffer",
  "fields":[{"name":"address", "allowUnsafeAccess":true}]
},
{
  "name":"java.nio.DirectByteBuffer",
  "methods":[{"name":"<init>","parameterTypes":["long","int"] }]
},
{
  "name":"java.sql.Date"
},
{
  "name":"java.sql.Timestamp"
},
{
  "name":"java.util.ArrayList",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"java.util.Map",
  "allDeclaredMethods":true
},
{
  "name":"java.util.Map$Entry",
  "allPublicMethods":true
},
{
  "name":"javax.management.ObjectName"
},
{
  "name":"javax.validation.constraints.NotBlank"
},
{
  "name":"javax.validation.constraints.NotNull"
},
{
  "name":"jdk.internal.misc.Unsafe",
  "methods":[{"name":"getUnsafe","parameterTypes":[] }]
},
{
  "name":"org.apache.ibatis.javassist.ClassPool"
},
{
  "name":"org.apache.ibatis.javassist.util.proxy.ProxyFactory"
},
{
  "name":"org.apache.ibatis.logging.slf4j.Slf4jImpl",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.apache.ibatis.ognl.OgnlRuntime$ClassPropertyMethodCache",
  "methods":[{"name":"get","parameterTypes":["java.lang.Class","java.lang.String"] }]
},
{
  "name":"org.apache.ibatis.scripting.defaults.RawLanguageDriver",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.ibatis.scripting.xmltags.XMLLanguageDriver",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.ibatis.session.Configuration",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.camunda.bpm.application.impl.ProcessApplicationLogger",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.camunda.bpm.container.impl.ContainerIntegrationLogger",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.camunda.bpm.dmn.engine.DmnDecision",
  "allPublicMethods":true
},
{
  "name":"org.camunda.bpm.dmn.engine.DmnDecisionRequirementsGraph",
  "allPublicMethods":true
},
{
  "name":"org.camunda.bpm.dmn.engine.impl.DmnDecisionImpl",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.camunda.bpm.dmn.engine.impl.DmnDecisionRequirementsGraphImpl",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.camunda.bpm.dmn.engine.impl.DmnEngineLogger",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.camunda.bpm.dmn.engine.impl.hitpolicy.DmnHitPolicyLogger",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.camunda.bpm.dmn.engine.impl.transform.DmnTransformLogger",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.camunda.bpm.dmn.feel.impl.scala.ScalaFeelLogger",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.camunda.bpm.engine.authorization.Authorization",
  "allPublicMethods":true
},
{
  "name":"org.camunda.bpm.engine.batch.Batch",
  "allPublicMethods":true
},
{
  "name":"org.camunda.bpm.engine.batch.BatchStatistics",
  "allPublicMethods":true
},
{
  "name":"org.camunda.bpm.engine.batch.history.HistoricBatch",
  "allPublicMethods":true
},
{
  "name":"org.camunda.bpm.engine.delegate.BaseDelegateExecution",
  "allPublicMethods":true
},
{
  "name":"org.camunda.bpm.engine.delegate.DelegateTask",
  "allPublicMethods":true
},
{
  "name":"org.camunda.bpm.engine.delegate.VariableScope",
  "allPublicMethods":true
},
{
  "name":"org.camunda.bpm.engine.externaltask.ExternalTask",
  "allPublicMethods":true
},
{
  "name":"org.camunda.bpm.engine.filter.Filter",
  "allPublicMethods":true
},
{
  "name":"org.camunda.bpm.engine.history.CleanableHistoricBatchReportResult",
  "allPublicMethods":true
},
{
  "name":"org.camunda.bpm.engine.history.CleanableHistoricCaseInstanceReportResult",
  "allPublicMethods":true
},
{
  "name":"org.camunda.bpm.engine.history.CleanableHistoricDecisionInstanceReportResult",
  "allPublicMethods":true
},
{
  "name":"org.camunda.bpm.engine.history.CleanableHistoricProcessInstanceReportResult",
  "allPublicMethods":true
},
{
  "name":"org.camunda.bpm.engine.history.DurationReportResult",
  "allPublicMethods":true
},
{
  "name":"org.camunda.bpm.engine.history.HistoricActivityInstance",
  "allPublicMethods":true
},
{
  "name":"org.camunda.bpm.engine.history.HistoricActivityStatistics",
  "allPublicMethods":true
},
{
  "name":"org.camunda.bpm.engine.history.HistoricCaseActivityInstance",
  "allPublicMethods":true
},
{
  "name":"org.camunda.bpm.engine.history.HistoricCaseActivityStatistics",
  "allPublicMethods":true
},
{
  "name":"org.camunda.bpm.engine.history.HistoricCaseActivityStatisticsQuery",
  "allPublicMethods":true
},
{
  "name":"org.camunda.bpm.engine.history.HistoricCaseInstance",
  "allPublicMethods":true
},
{
  "name":"org.camunda.bpm.engine.history.HistoricDecisionInputInstance",
  "allPublicMethods":true
},
{
  "name":"org.camunda.bpm.engine.history.HistoricDecisionInstance",
  "allPublicMethods":true
},
{
  "name":"org.camunda.bpm.engine.history.HistoricDecisionInstanceStatistics",
  "allPublicMethods":true
},
{
  "name":"org.camunda.bpm.engine.history.HistoricDecisionOutputInstance",
  "allPublicMethods":true
},
{
  "name":"org.camunda.bpm.engine.history.HistoricExternalTaskLog",
  "allPublicMethods":true
},
{
  "name":"org.camunda.bpm.engine.history.HistoricIdentityLinkLog",
  "allPublicMethods":true
},
{
  "name":"org.camunda.bpm.engine.history.HistoricIncident",
  "allPublicMethods":true
},
{
  "name":"org.camunda.bpm.engine.history.HistoricJobLog",
  "allPublicMethods":true
},
{
  "name":"org.camunda.bpm.engine.history.HistoricProcessInstance",
  "allPublicMethods":true
},
{
  "name":"org.camunda.bpm.engine.history.HistoricTaskInstance",
  "allPublicMethods":true
},
{
  "name":"org.camunda.bpm.engine.history.HistoricTaskInstanceReportResult",
  "allPublicMethods":true
},
{
  "name":"org.camunda.bpm.engine.history.HistoricVariableInstance",
  "allPublicMethods":true
},
{
  "name":"org.camunda.bpm.engine.history.HistoricVariableUpdate",
  "allPublicMethods":true
},
{
  "name":"org.camunda.bpm.engine.history.ReportResult",
  "allPublicMethods":true
},
{
  "name":"org.camunda.bpm.engine.history.UserOperationLogEntry",
  "allPublicMethods":true
},
{
  "name":"org.camunda.bpm.engine.identity.Group",
  "allPublicMethods":true
},
{
  "name":"org.camunda.bpm.engine.identity.Tenant",
  "allPublicMethods":true
},
{
  "name":"org.camunda.bpm.engine.identity.User",
  "allPublicMethods":true
},
{
  "name":"org.camunda.bpm.engine.impl.AbstractQuery",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.camunda.bpm.engine.impl.ActivityStatisticsQueryImpl"
},
{
  "name":"org.camunda.bpm.engine.impl.AuthorizationQueryImpl"
},
{
  "name":"org.camunda.bpm.engine.impl.CleanableHistoricBatchReportImpl"
},
{
  "name":"org.camunda.bpm.engine.impl.CleanableHistoricCaseInstanceReportImpl"
},
{
  "name":"org.camunda.bpm.engine.impl.CleanableHistoricDecisionInstanceReportImpl"
},
{
  "name":"org.camunda.bpm.engine.impl.CleanableHistoricProcessInstanceReportImpl"
},
{
  "name":"org.camunda.bpm.engine.impl.DeploymentQueryImpl"
},
{
  "name":"org.camunda.bpm.engine.impl.DeploymentStatisticsQueryImpl"
},
{
  "name":"org.camunda.bpm.engine.impl.EventSubscriptionQueryImpl"
},
{
  "name":"org.camunda.bpm.engine.impl.ExecutionQueryImpl"
},
{
  "name":"org.camunda.bpm.engine.impl.ExternalTaskQueryImpl"
},
{
  "name":"org.camunda.bpm.engine.impl.GroupQueryImpl"
},
{
  "name":"org.camunda.bpm.engine.impl.HistoricActivityInstanceQueryImpl"
},
{
  "name":"org.camunda.bpm.engine.impl.HistoricActivityStatisticsQueryImpl"
},
{
  "name":"org.camunda.bpm.engine.impl.HistoricCaseActivityInstanceQueryImpl"
},
{
  "name":"org.camunda.bpm.engine.impl.HistoricCaseActivityStatisticsQueryImpl",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.camunda.bpm.engine.impl.HistoricCaseInstanceQueryImpl"
},
{
  "name":"org.camunda.bpm.engine.impl.HistoricDecisionInstanceQueryImpl"
},
{
  "name":"org.camunda.bpm.engine.impl.HistoricDecisionInstanceStatisticsQueryImpl"
},
{
  "name":"org.camunda.bpm.engine.impl.HistoricDetailQueryImpl"
},
{
  "name":"org.camunda.bpm.engine.impl.HistoricExternalTaskLogQueryImpl"
},
{
  "name":"org.camunda.bpm.engine.impl.HistoricIdentityLinkLogQueryImpl"
},
{
  "name":"org.camunda.bpm.engine.impl.HistoricIncidentQueryImpl"
},
{
  "name":"org.camunda.bpm.engine.impl.HistoricJobLogQueryImpl"
},
{
  "name":"org.camunda.bpm.engine.impl.HistoricProcessInstanceQueryImpl"
},
{
  "name":"org.camunda.bpm.engine.impl.HistoricProcessInstanceReportImpl"
},
{
  "name":"org.camunda.bpm.engine.impl.HistoricTaskInstanceQueryImpl"
},
{
  "name":"org.camunda.bpm.engine.impl.HistoricTaskInstanceReportImpl"
},
{
  "name":"org.camunda.bpm.engine.impl.HistoricVariableInstanceQueryImpl"
},
{
  "name":"org.camunda.bpm.engine.impl.IncidentQueryImpl"
},
{
  "name":"org.camunda.bpm.engine.impl.JobDefinitionQueryImpl"
},
{
  "name":"org.camunda.bpm.engine.impl.JobQueryImpl"
},
{
  "name":"org.camunda.bpm.engine.impl.ProcessDefinitionQueryImpl"
},
{
  "name":"org.camunda.bpm.engine.impl.ProcessDefinitionStatisticsQueryImpl"
},
{
  "name":"org.camunda.bpm.engine.impl.ProcessEngineLogger",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.camunda.bpm.engine.impl.ProcessInstanceQueryImpl"
},
{
  "name":"org.camunda.bpm.engine.impl.SchemaLogQueryImpl"
},
{
  "name":"org.camunda.bpm.engine.impl.TablePageQueryImpl"
},
{
  "name":"org.camunda.bpm.engine.impl.TaskQueryImpl"
},
{
  "name":"org.camunda.bpm.engine.impl.TaskReportImpl"
},
{
  "name":"org.camunda.bpm.engine.impl.TenantQueryImpl"
},
{
  "name":"org.camunda.bpm.engine.impl.UserOperationLogQueryImpl"
},
{
  "name":"org.camunda.bpm.engine.impl.UserQueryImpl"
},
{
  "name":"org.camunda.bpm.engine.impl.VariableInstanceQueryImpl"
},
{
  "name":"org.camunda.bpm.engine.impl.batch.BatchEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.camunda.bpm.engine.impl.batch.BatchQueryImpl"
},
{
  "name":"org.camunda.bpm.engine.impl.batch.BatchStatisticsEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.camunda.bpm.engine.impl.batch.BatchStatisticsQueryImpl"
},
{
  "name":"org.camunda.bpm.engine.impl.batch.history.HistoricBatchEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.camunda.bpm.engine.impl.batch.history.HistoricBatchQueryImpl"
},
{
  "name":"org.camunda.bpm.engine.impl.bpmn.behavior.BpmnBehaviorLogger",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.camunda.bpm.engine.impl.bpmn.parser.BpmnParseLogger",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.camunda.bpm.engine.impl.cfg.ConfigurationLogger",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.camunda.bpm.engine.impl.cfg.TransactionLogger",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.camunda.bpm.engine.impl.cmd.CommandLogger",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.camunda.bpm.engine.impl.cmmn.behavior.CmmnBehaviorLogger",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.camunda.bpm.engine.impl.cmmn.entity.repository.CaseDefinitionEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.camunda.bpm.engine.impl.cmmn.entity.repository.CaseDefinitionQueryImpl"
},
{
  "name":"org.camunda.bpm.engine.impl.cmmn.entity.runtime.CaseExecutionEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.camunda.bpm.engine.impl.cmmn.entity.runtime.CaseExecutionQueryImpl"
},
{
  "name":"org.camunda.bpm.engine.impl.cmmn.entity.runtime.CaseInstanceQueryImpl"
},
{
  "name":"org.camunda.bpm.engine.impl.cmmn.entity.runtime.CaseSentryPartEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.camunda.bpm.engine.impl.cmmn.entity.runtime.CaseSentryPartQueryImpl"
},
{
  "name":"org.camunda.bpm.engine.impl.cmmn.execution.CmmnCaseInstance",
  "allPublicMethods":true
},
{
  "name":"org.camunda.bpm.engine.impl.cmmn.execution.CmmnExecution",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.camunda.bpm.engine.impl.cmmn.execution.CmmnSentryPart",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.camunda.bpm.engine.impl.cmmn.model.CmmnActivity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.camunda.bpm.engine.impl.cmmn.model.CmmnCaseDefinition",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.camunda.bpm.engine.impl.cmmn.operation.CmmnOperationLogger",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.camunda.bpm.engine.impl.cmmn.transformer.CmmnTransformerLogger",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.camunda.bpm.engine.impl.core.CoreLogger",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.camunda.bpm.engine.impl.core.instance.CoreExecution",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.camunda.bpm.engine.impl.core.model.CoreActivity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.camunda.bpm.engine.impl.core.model.CoreModelElement",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.camunda.bpm.engine.impl.core.variable.CoreVariableInstance",
  "allPublicMethods":true
},
{
  "name":"org.camunda.bpm.engine.impl.core.variable.event.VariableEventDispatcher",
  "allPublicMethods":true
},
{
  "name":"org.camunda.bpm.engine.impl.core.variable.scope.AbstractVariableScope",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.camunda.bpm.engine.impl.core.variable.scope.VariableStore$VariablesProvider",
  "allPublicMethods":true
},
{
  "name":"org.camunda.bpm.engine.impl.db.DbEntity",
  "allPublicMethods":true
},
{
  "name":"org.camunda.bpm.engine.impl.db.DbEntityLifecycleAware",
  "allPublicMethods":true
},
{
  "name":"org.camunda.bpm.engine.impl.db.EnginePersistenceLogger",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.camunda.bpm.engine.impl.db.HasDbReferences",
  "allPublicMethods":true
},
{
  "name":"org.camunda.bpm.engine.impl.db.HasDbRevision",
  "allPublicMethods":true
},
{
  "name":"org.camunda.bpm.engine.impl.db.HistoricEntity",
  "allPublicMethods":true
},
{
  "name":"org.camunda.bpm.engine.impl.db.ListQueryParameterObject",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.camunda.bpm.engine.impl.db.TenantCheck",
  "allDeclaredMethods":true
},
{
  "name":"org.camunda.bpm.engine.impl.digest.SecurityLogger",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.camunda.bpm.engine.impl.dmn.DecisionLogger",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.camunda.bpm.engine.impl.dmn.entity.repository.DecisionDefinitionEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.camunda.bpm.engine.impl.dmn.entity.repository.DecisionDefinitionQueryImpl"
},
{
  "name":"org.camunda.bpm.engine.impl.dmn.entity.repository.DecisionRequirementsDefinitionEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.camunda.bpm.engine.impl.dmn.entity.repository.DecisionRequirementsDefinitionQueryImpl"
},
{
  "name":"org.camunda.bpm.engine.impl.externaltask.ExternalTaskLogger",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.camunda.bpm.engine.impl.filter.FilterQueryImpl"
},
{
  "name":"org.camunda.bpm.engine.impl.history.event.HistoricActivityInstanceEventEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.camunda.bpm.engine.impl.history.event.HistoricCaseActivityInstanceEventEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.camunda.bpm.engine.impl.history.event.HistoricCaseInstanceEventEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.camunda.bpm.engine.impl.history.event.HistoricDecisionInputInstanceEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.camunda.bpm.engine.impl.history.event.HistoricDecisionInstanceEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.camunda.bpm.engine.impl.history.event.HistoricDecisionOutputInstanceEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.camunda.bpm.engine.impl.history.event.HistoricDetailEventEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.camunda.bpm.engine.impl.history.event.HistoricExternalTaskLogEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.camunda.bpm.engine.impl.history.event.HistoricFormPropertyEventEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.camunda.bpm.engine.impl.history.event.HistoricIdentityLinkLogEventEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.camunda.bpm.engine.impl.history.event.HistoricIncidentEventEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.camunda.bpm.engine.impl.history.event.HistoricJobLogEvent",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.camunda.bpm.engine.impl.history.event.HistoricProcessInstanceEventEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.camunda.bpm.engine.impl.history.event.HistoricScopeInstanceEvent",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.camunda.bpm.engine.impl.history.event.HistoricTaskInstanceEventEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.camunda.bpm.engine.impl.history.event.HistoricVariableUpdateEventEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.camunda.bpm.engine.impl.history.event.HistoryEvent",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.camunda.bpm.engine.impl.history.event.UserOperationLogEntryEventEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.camunda.bpm.engine.impl.identity.Account",
  "allPublicMethods":true
},
{
  "name":"org.camunda.bpm.engine.impl.identity.IndentityLogger",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.camunda.bpm.engine.impl.incident.IncidentLogger",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.camunda.bpm.engine.impl.interceptor.Command",
  "allPublicMethods":true
},
{
  "name":"org.camunda.bpm.engine.impl.interceptor.CommandContextListener",
  "allPublicMethods":true
},
{
  "name":"org.camunda.bpm.engine.impl.interceptor.ContextLogger",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.camunda.bpm.engine.impl.jobexecutor.JobExecutorLogger",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.camunda.bpm.engine.impl.metrics.MetricsLogger",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.camunda.bpm.engine.impl.metrics.MetricsQueryImpl"
},
{
  "name":"org.camunda.bpm.engine.impl.migration.MigrationLogger",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.camunda.bpm.engine.impl.persistence.entity.AcquirableJobEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.camunda.bpm.engine.impl.persistence.entity.ActivityStatisticsImpl",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.camunda.bpm.engine.impl.persistence.entity.AttachmentEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.camunda.bpm.engine.impl.persistence.entity.AuthorizationEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.camunda.bpm.engine.impl.persistence.entity.AuthorizationManager",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.camunda.bpm.engine.impl.persistence.entity.ByteArrayEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.camunda.bpm.engine.impl.persistence.entity.CleanableHistoricBatchesReportResultEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.camunda.bpm.engine.impl.persistence.entity.CleanableHistoricCaseInstanceReportResultEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.camunda.bpm.engine.impl.persistence.entity.CleanableHistoricDecisionInstanceReportResultEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.camunda.bpm.engine.impl.persistence.entity.CleanableHistoricProcessInstanceReportResultEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.camunda.bpm.engine.impl.persistence.entity.CommentEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.camunda.bpm.engine.impl.persistence.entity.DecisionInstanceStatisticsImpl",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.camunda.bpm.engine.impl.persistence.entity.DeploymentEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.camunda.bpm.engine.impl.persistence.entity.DeploymentManager",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.camunda.bpm.engine.impl.persistence.entity.DeploymentStatisticsEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.camunda.bpm.engine.impl.persistence.entity.DurationReportResultEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.camunda.bpm.engine.impl.persistence.entity.EventSubscriptionEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.camunda.bpm.engine.impl.persistence.entity.EverLivingJobEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.camunda.bpm.engine.impl.persistence.entity.ExecutionEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.camunda.bpm.engine.impl.persistence.entity.ExecutionManager",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.camunda.bpm.engine.impl.persistence.entity.ExternalTaskEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.camunda.bpm.engine.impl.persistence.entity.FilterEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.camunda.bpm.engine.impl.persistence.entity.GroupEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.camunda.bpm.engine.impl.persistence.entity.HistoricActivityInstanceEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.camunda.bpm.engine.impl.persistence.entity.HistoricActivityStatisticsImpl",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.camunda.bpm.engine.impl.persistence.entity.HistoricCaseActivityInstanceEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.camunda.bpm.engine.impl.persistence.entity.HistoricCaseActivityStatisticsImpl",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.camunda.bpm.engine.impl.persistence.entity.HistoricCaseInstanceEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.camunda.bpm.engine.impl.persistence.entity.HistoricDetailVariableInstanceUpdateEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.camunda.bpm.engine.impl.persistence.entity.HistoricFormPropertyEntity"
},
{
  "name":"org.camunda.bpm.engine.impl.persistence.entity.HistoricIdentityLinkLogEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.camunda.bpm.engine.impl.persistence.entity.HistoricIncidentEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.camunda.bpm.engine.impl.persistence.entity.HistoricJobLogEventEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.camunda.bpm.engine.impl.persistence.entity.HistoricJobLogManager",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.camunda.bpm.engine.impl.persistence.entity.HistoricProcessInstanceEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.camunda.bpm.engine.impl.persistence.entity.HistoricTaskInstanceEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.camunda.bpm.engine.impl.persistence.entity.HistoricVariableInstanceEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.camunda.bpm.engine.impl.persistence.entity.IdentityInfoEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.camunda.bpm.engine.impl.persistence.entity.IdentityLinkEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.camunda.bpm.engine.impl.persistence.entity.IncidentEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.camunda.bpm.engine.impl.persistence.entity.IncidentManager",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.camunda.bpm.engine.impl.persistence.entity.IncidentStatisticsEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.camunda.bpm.engine.impl.persistence.entity.JobDefinitionEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.camunda.bpm.engine.impl.persistence.entity.JobDefinitionManager",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.camunda.bpm.engine.impl.persistence.entity.JobEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.camunda.bpm.engine.impl.persistence.entity.JobManager",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.camunda.bpm.engine.impl.persistence.entity.MessageEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.camunda.bpm.engine.impl.persistence.entity.MeterLogEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.camunda.bpm.engine.impl.persistence.entity.MeterLogManager",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.camunda.bpm.engine.impl.persistence.entity.MetricIntervalEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.camunda.bpm.engine.impl.persistence.entity.Nameable",
  "allPublicMethods":true
},
{
  "name":"org.camunda.bpm.engine.impl.persistence.entity.ProcessDefinitionEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.camunda.bpm.engine.impl.persistence.entity.ProcessDefinitionManager",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.camunda.bpm.engine.impl.persistence.entity.ProcessDefinitionStatisticsEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.camunda.bpm.engine.impl.persistence.entity.PropertyEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.camunda.bpm.engine.impl.persistence.entity.PropertyManager",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.camunda.bpm.engine.impl.persistence.entity.ReportResultEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.camunda.bpm.engine.impl.persistence.entity.ResourceEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.camunda.bpm.engine.impl.persistence.entity.ResourceManager",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.camunda.bpm.engine.impl.persistence.entity.SchemaLogEntryEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.camunda.bpm.engine.impl.persistence.entity.TableDataManager",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.camunda.bpm.engine.impl.persistence.entity.TaskCountByCandidateGroupResultEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.camunda.bpm.engine.impl.persistence.entity.TaskEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.camunda.bpm.engine.impl.persistence.entity.TaskReportResultEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.camunda.bpm.engine.impl.persistence.entity.TenantEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.camunda.bpm.engine.impl.persistence.entity.TenantManager",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.camunda.bpm.engine.impl.persistence.entity.TenantMembershipEntity"
},
{
  "name":"org.camunda.bpm.engine.impl.persistence.entity.TimerEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.camunda.bpm.engine.impl.persistence.entity.UserEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.camunda.bpm.engine.impl.persistence.entity.UserOperationLogManager",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.camunda.bpm.engine.impl.persistence.entity.VariableInstanceEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.camunda.bpm.engine.impl.persistence.entity.VariableInstanceManager",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.camunda.bpm.engine.impl.persistence.entity.optimize.OptimizeHistoricIdentityLinkLogEntity",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.camunda.bpm.engine.impl.persistence.entity.util.TypedValueUpdateListener",
  "allPublicMethods":true
},
{
  "name":"org.camunda.bpm.engine.impl.plugin.AdministratorAuthorizationPluginLogger",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.camunda.bpm.engine.impl.pvm.PvmLogger",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.camunda.bpm.engine.impl.pvm.PvmProcessDefinition",
  "allPublicMethods":true
},
{
  "name":"org.camunda.bpm.engine.impl.pvm.PvmProcessInstance",
  "allPublicMethods":true
},
{
  "name":"org.camunda.bpm.engine.impl.pvm.PvmScope",
  "allPublicMethods":true
},
{
  "name":"org.camunda.bpm.engine.impl.pvm.delegate.ActivityExecution",
  "allPublicMethods":true
},
{
  "name":"org.camunda.bpm.engine.impl.pvm.process.ProcessDefinitionImpl",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.camunda.bpm.engine.impl.pvm.process.ScopeImpl",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.camunda.bpm.engine.impl.pvm.runtime.PvmExecutionImpl",
  "allDeclaredFields":true,
  "allDeclaredMethods":true
},
{
  "name":"org.camunda.bpm.engine.impl.repository.ResourceDefinitionEntity",
  "allPublicMethods":true
},
{
  "name":"org.camunda.bpm.engine.impl.scripting.ScriptLogger",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.camunda.bpm.engine.impl.test.TestLogger",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.camunda.bpm.engine.impl.util.EngineUtilLogger",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.camunda.bpm.engine.impl.util.ImmutablePair",
  "allDeclaredFields":true,
  "allDeclaredMethods":true,
  "allDeclaredConstructors":true
},
{
  "name":"org.camunda.bpm.engine.impl.variable.serializer.ValueFields",
  "allPublicMethods":true
},
{
  "name":"org.camunda.bpm.engine.management.ActivityStatistics",
  "allPublicMethods":true
},
{
  "name":"org.camunda.bpm.engine.management.DeploymentStatistics",
  "allPublicMethods":true
},
{
  "name":"org.camunda.bpm.engine.management.IncidentStatistics",
  "allPublicMethods":true
},
{
  "name":"org.camunda.bpm.engine.management.JobDefinition",
  "allPublicMethods":true
},
{
  "name":"org.camunda.bpm.engine.management.MetricIntervalValue",
  "allPublicMethods":true
},
{
  "name":"org.camunda.bpm.engine.management.ProcessDefinitionStatistics",
  "allPublicMethods":true
},
{
  "name":"org.camunda.bpm.engine.management.SchemaLogEntry",
  "allPublicMethods":true
},
{
  "name":"org.camunda.bpm.engine.query.Query",
  "allPublicMethods":true
},
{
  "name":"org.camunda.bpm.engine.repository.CaseDefinition",
  "allPublicMethods":true
},
{
  "name":"org.camunda.bpm.engine.repository.DecisionDefinition",
  "allPublicMethods":true
},
{
  "name":"org.camunda.bpm.engine.repository.DecisionRequirementsDefinition",
  "allPublicMethods":true
},
{
  "name":"org.camunda.bpm.engine.repository.DeploymentWithDefinitions",
  "allPublicMethods":true
},
{
  "name":"org.camunda.bpm.engine.repository.ProcessDefinition",
  "allPublicMethods":true
},
{
  "name":"org.camunda.bpm.engine.repository.Resource",
  "allPublicMethods":true
},
{
  "name":"org.camunda.bpm.engine.runtime.CaseExecution",
  "allPublicMethods":true
},
{
  "name":"org.camunda.bpm.engine.runtime.CaseInstance",
  "allPublicMethods":true
},
{
  "name":"org.camunda.bpm.engine.runtime.EventSubscription",
  "allPublicMethods":true
},
{
  "name":"org.camunda.bpm.engine.runtime.Execution",
  "allPublicMethods":true
},
{
  "name":"org.camunda.bpm.engine.runtime.Incident",
  "allPublicMethods":true
},
{
  "name":"org.camunda.bpm.engine.runtime.Job",
  "allPublicMethods":true
},
{
  "name":"org.camunda.bpm.engine.runtime.ProcessInstance",
  "allPublicMethods":true
},
{
  "name":"org.camunda.bpm.engine.runtime.VariableInstance",
  "allPublicMethods":true
},
{
  "name":"org.camunda.bpm.engine.task.Attachment",
  "allPublicMethods":true
},
{
  "name":"org.camunda.bpm.engine.task.Comment",
  "allPublicMethods":true
},
{
  "name":"org.camunda.bpm.engine.task.Event",
  "allPublicMethods":true
},
{
  "name":"org.camunda.bpm.engine.task.IdentityLink",
  "allPublicMethods":true
},
{
  "name":"org.camunda.bpm.engine.task.Task",
  "allPublicMethods":true
},
{
  "name":"org.camunda.bpm.engine.task.TaskCountByCandidateGroupResult",
  "allPublicMethods":true
},
{
  "name":"org.postgresql.PGProperty",
  "fields":[
    {"name":"ALLOW_ENCODING_CHANGES"}, 
    {"name":"APPLICATION_NAME"}, 
    {"name":"ASSUME_MIN_SERVER_VERSION"}, 
    {"name":"AUTOSAVE"}, 
    {"name":"BINARY_TRANSFER"}, 
    {"name":"BINARY_TRANSFER_DISABLE"}, 
    {"name":"BINARY_TRANSFER_ENABLE"}, 
    {"name":"CANCEL_SIGNAL_TIMEOUT"}, 
    {"name":"CLEANUP_SAVEPOINTS"}, 
    {"name":"CONNECT_TIMEOUT"}, 
    {"name":"CURRENT_SCHEMA"}, 
    {"name":"DATABASE_METADATA_CACHE_FIELDS"}, 
    {"name":"DATABASE_METADATA_CACHE_FIELDS_MIB"}, 
    {"name":"DEFAULT_ROW_FETCH_SIZE"}, 
    {"name":"DISABLE_COLUMN_SANITISER"}, 
    {"name":"ESCAPE_SYNTAX_CALL_MODE"}, 
    {"name":"GSS_ENC_MODE"}, 
    {"name":"GSS_LIB"}, 
    {"name":"HIDE_UNPRIVILEGED_OBJECTS"}, 
    {"name":"HOST_RECHECK_SECONDS"}, 
    {"name":"JAAS_APPLICATION_NAME"}, 
    {"name":"JAAS_LOGIN"}, 
    {"name":"KERBEROS_SERVER_NAME"}, 
    {"name":"LOAD_BALANCE_HOSTS"}, 
    {"name":"LOGGER_FILE"}, 
    {"name":"LOGGER_LEVEL"}, 
    {"name":"LOGIN_TIMEOUT"}, 
    {"name":"LOG_SERVER_ERROR_DETAIL"}, 
    {"name":"LOG_UNCLOSED_CONNECTIONS"}, 
    {"name":"MAX_RESULT_BUFFER"}, 
    {"name":"OPTIONS"}, 
    {"name":"PASSWORD"}, 
    {"name":"PG_DBNAME"}, 
    {"name":"PG_HOST"}, 
    {"name":"PG_PORT"}, 
    {"name":"PREFER_QUERY_MODE"}, 
    {"name":"PREPARED_STATEMENT_CACHE_QUERIES"}, 
    {"name":"PREPARED_STATEMENT_CACHE_SIZE_MIB"}, 
    {"name":"PREPARE_THRESHOLD"}, 
    {"name":"PROTOCOL_VERSION"}, 
    {"name":"READ_ONLY"}, 
    {"name":"READ_ONLY_MODE"}, 
    {"name":"RECEIVE_BUFFER_SIZE"}, 
    {"name":"REPLICATION"}, 
    {"name":"REWRITE_BATCHED_INSERTS"}, 
    {"name":"SEND_BUFFER_SIZE"}, 
    {"name":"SOCKET_FACTORY"}, 
    {"name":"SOCKET_FACTORY_ARG"}, 
    {"name":"SOCKET_TIMEOUT"}, 
    {"name":"SSL"}, 
    {"name":"SSL_CERT"}, 
    {"name":"SSL_FACTORY"}, 
    {"name":"SSL_FACTORY_ARG"}, 
    {"name":"SSL_HOSTNAME_VERIFIER"}, 
    {"name":"SSL_KEY"}, 
    {"name":"SSL_MODE"}, 
    {"name":"SSL_PASSWORD"}, 
    {"name":"SSL_PASSWORD_CALLBACK"}, 
    {"name":"SSL_ROOT_CERT"}, 
    {"name":"SSPI_SERVICE_CLASS"}, 
    {"name":"STRING_TYPE"}, 
    {"name":"TARGET_SERVER_TYPE"}, 
    {"name":"TCP_KEEP_ALIVE"}, 
    {"name":"UNKNOWN_LENGTH"}, 
    {"name":"USER"}, 
    {"name":"USE_SPNEGO"}, 
    {"name":"XML_FACTORY_FACTORY"}
  ]
},
{
  "name":"org.slf4j.spi.LocationAwareLogger"
},
{
  "name":"org.springframework.util.ConcurrentReferenceHashMap$Segment[]"
},
{
  "name":"sun.misc.Unsafe",
  "fields":[{"name":"theUnsafe"}],
  "methods":[
    {"name":"copyMemory","parameterTypes":["java.lang.Object","long","java.lang.Object","long","long"] }, 
    {"name":"getAndAddLong","parameterTypes":["java.lang.Object","long","long"] }, 
    {"name":"getAndSetObject","parameterTypes":["java.lang.Object","long","java.lang.Object"] }, 
    {"name":"invokeCleaner","parameterTypes":["java.nio.ByteBuffer"] }
  ]
},
{
  "name":"sun.nio.ch.SelectorImpl",
  "fields":[
    {"name":"publicSelectedKeys", "allowUnsafeAccess":true}, 
    {"name":"selectedKeys", "allowUnsafeAccess":true}
  ]
},
{
  "name":"sun.security.provider.ConfigFile",
  "methods":[{"name":"<init>","parameterTypes":[] }]
}
]
